apiVersion: apps/v1
kind: Deployment
metadata:
  name: multi-agent-app
  namespace: customer-service
  labels:
    app: multi-agent-cs
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: multi-agent-cs
      component: api
  template:
    metadata:
      labels:
        app: multi-agent-cs
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: multi-agent-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: app
        image: gcr.io/YOUR_PROJECT_ID/multi-agent-cs:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/var/secrets/google/key.json"
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_DB
          value: "0"
        - name: POSTGRES_HOST
          value: "postgres-service"
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB
          value: "customer_service"
        - name: POSTGRES_USER
          value: "cs_user"
        envFrom:
        - configMapRef:
            name: multi-agent-config
        - secretRef:
            name: multi-agent-secrets
        volumeMounts:
        - name: google-cloud-key
          mountPath: /var/secrets/google
          readOnly: true
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2000m"
            memory: "4Gi"
        livenessProbe:
          httpGet:
            path: /api/v1/system/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/system/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      volumes:
      - name: google-cloud-key
        secret:
          secretName: google-cloud-key
      nodeSelector:
        cloud.google.com/gke-nodepool: default-pool
      tolerations:
      - key: "workload"
        operator: "Equal"
        value: "api"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - multi-agent-cs
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: multi-agent-sa
  namespace: customer-service
  annotations:
    iam.gke.io/gcp-service-account: multi-agent-cs@YOUR_PROJECT_ID.iam.gserviceaccount.com